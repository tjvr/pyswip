
Due to the path-finding part of the code and some issues with 32 and 64 bit
compatibility, the test cases should be run in several operating systems, both
32 and 64 bits. The Linux tests are made in fresh installs (kept in virtual
machines "snapshoted" to a clean state). The Windows tests are done in clean
Windows installs.

Help would be appreciated in testing this in Mac OS, as I do not have access to
these.

All tests were performed in virtual machines (VirtualBox was used).

The following Linux distributions are used to test. The commands described are
issued just after the installation:

 - Ubuntu Alternate 12.04 LTS (32 and 64 bits)
   (Note: The alternate was used because the installation is smaller)
   After a clean install, do:
         sudo apt-get install swi-prolog
   - pySwip available in dir PYSWIP_HOME

 - Fedora 16 Desktop edition (32 and 64 bits)
   After a clean install:
         yum -y install gcc kernel-devel kernel-headers dkms make bzip2  # For VirtualBox guest module. Reboot after it
         export KERN_DIR=/usr/src/kernels/`uname -r`    # For VBox guest module
         # Then install the guest module
         yum -y install pl
   - pySwip available in dir PYSWIP_HOME

Also, tests are done in Windows XP (32 and 64), with
the following configuration:
 - Windows 32
   - Python 2.7 (official distribution) in a default install
   - SWI-Prolog 6.0.2 in a default install
   - pySwip available in dir PYSWIP_HOME (for development it is useful to map
     the development dir to a drive, such as E:, if running in a virtual
     machine)

 - Windows 64
   - Python 2.7.3 x64 (official distribution) in a default install
   - SWI-Prolog 6.2.5 in a default install
   - pySwip available in dir PYSWIP_HOME (for development it is useful to map
     the development dir to a drive, such as E:, if running in a virtual
     machine)

Running the tests
=================

 - In all systems
   1. Open a terminal
   2. CD to PYSWIP_HOME/test
   3. Run `runtests`

